import Loading from "@/components/Loading";
import useQueryParams from "@/hooks/useQueryParams";
import styles from "@/styles/MapPage.module.css";
import { DataForMap } from "@/types/data";
import { PageType } from "@/types/page";
import dynamic from "next/dynamic";
import Head from "next/head";
import React, { useRef } from "react";
import Alert from "../MapPage/Alert";
import Menu from "../MapPage/Menu";
import SuggestInput from "../MapPage/SuggestInput";

export interface MapPageProps {
  data: DataForMap;
  pageType: PageType;
  showDebugInfo?: boolean;
  ordinanceText?: string;
  year?: number;
}

export default function NewMapPage({
  data,
  pageType,
  ordinanceText,
  showDebugInfo = false,
  year,
}: MapPageProps) {
  const { showSearch, showMenu, showControls } = useQueryParams(pageType);

  const [alertMessage, setAlertMessage] = React.useState("");
  const [alertVisible, setAlertVisible] = React.useState(false);

  const showAlert = (message: string) => {
    setAlertMessage(message);
    setAlertVisible(true);
    setTimeout(() => {
      setAlertVisible(false);
    }, 5000);
  };

  const inputRef = useRef<HTMLInputElement>(null);

  const Map = React.useMemo(
    () =>
      dynamic(() => import("@/components/NewMap/InnerMap"), {
        loading: () => <Loading />,
        ssr: false,
      }),
    []
  );

  return (
    <>
      <Head>
        <title>Mapa pražských spádových oblastí</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.png" />
      </Head>
      <main>
        {showSearch && (
          <div
            className={`${styles.suggest} ${
              showControls ? styles.moveRight : ""
            }`}
          >
            <SuggestInput ref={inputRef} />
          </div>
        )}

        <Map
          data={data}
          text={ordinanceText}
          showDebugInfo={showDebugInfo}
          suggestInput={inputRef}
          onError={showAlert}
        />

        {showMenu && (
          <Menu
            moveLeft={data.municipalities.length > 1 && showControls}
            year={year}
          />
        )}

        <Alert message={alertMessage} visible={alertVisible} />
      </main>
    </>
  );
}
